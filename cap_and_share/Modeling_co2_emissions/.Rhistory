summary(regression_3)
regression_4 <- pmg(log_consumption ~ log_gdp_fossil+ industry_share + imports_gns_percent + exports_gns_percent
, data = test_table_3, index = c("country", "year"), model = "cmg")
summary(regression_4)
regression_5 <- pmg(log_territorial ~ log_gdp_fossil, data = test_table_3, index = c("country", "year"), model = "cmg")
summary(regression_5)
regression_6 <- pmg(log_territorial ~ log_gdp_industrial, data = test_table_4, index=c("country", "year"), model="cmg")
summary(regression_6)
regression_7 <- pmg(log_territorial ~ log_gdp_fossil + log_gdp_industrial + log_gdp, data = test_table_4, index=c("country", "year"), model="cmg")
summary(regression_7)
initial_regression <- pmg(log_territorial ~ log_gdp + fossil_fuel_share + industry_share + imports_gns_percent + exports_gns_percent ,
data = test_table, index = c("country", "year"), model = "cmg")
summary(initial_regression)
initial_regression$indcoef
initial_regression_cons <- pmg(log_consumption ~ log_gdp + fossil_fuel_share + industry_share + imports_gns_percent + exports_gns_percent,
data = test_table_2, index = c("country", "year"), model = "cmg")
summary(initial_regression_cons)
test_regression <- pmg(log_territorial ~ log_gdp_fossil, data=test_table_3,index = c("country", "year"), model = "cmg" )
summary(test_regression)
# Running the regressions using data between 1997 and 2010
#Then we try and predict
pred_table <- test_table_5%>%
filter(year <= 2010)
bad_countries <- pred_table %>%
filter(is.nan(log_transfer_emissions)) %>%
distinct(country)
predicted_data <- test_table_5 %>%
filter(year == 2020)%>%
mutate(log_gdp_industrial.bar = mean(log_gdp_industrial, na.rm = TRUE)) %>%
mutate(log_gdp_fossil.bar = mean(log_gdp_fossil, na.rm = TRUE))%>%
mutate(log_gdp.bar = mean(log_gdp, na.rm = TRUE))%>%
mutate(log_territorial.bar = mean(log_territorial, na.rm = TRUE))%>%
mutate(log_consumption.bar = mean(log_consumption, na.rm = TRUE))%>%
mutate(fossil_fuel_share.bar = mean(fossil_fuel_share, na.rm = TRUE))%>%
mutate(imports_gns_percent.bar = mean(imports_gns_percent, na.rm = TRUE))%>%
mutate(exports_gns_percent.bar = mean(exports_gns_percent, na.rm = TRUE))%>%
mutate(industry_share.bar = mean(industry_share, na.rm = TRUE))%>%
mutate(trade_share.bar = mean(trade_share, na.rm = TRUE))%>%
mutate(log_transfer_emissions.bar = mean(log_transfer_emissions, na.rm = TRUE))%>%
mutate(transfer_emissions.bar = mean(transfer_emissions, na.rm = TRUE)) %>%
mutate(territorial_emissions.bar = mean(territorial_emissions, na.rm = TRUE)) %>%
mutate(consumption_emissions.bar = mean(consumption_emissions, na.rm = TRUE))%>%
mutate(gdp.bar = mean(gdp, na.rm = TRUE))%>%
mutate(trade_balance_GnS.bar = mean(trade_balance_GnS, na.rm = TRUE))%>%
mutate(trade_balance_goods.bar = mean(trade_balance_goods, na.rm = TRUE))
#small function to modify the computation of average errors
mean_absolute_error <- function(data = regression_data){
mea = sum(data$absolute_error * data$territorial_emissions.share, na.rm = TRUE)/sum(data$territorial_emissions.share, na.rm = TRUE)
return(mea)
}
#Regression : log consumption on log of fossil GDP
regression_8 <- pmg(log_consumption ~ log_gdp_fossil, data = pred_table, index = c("country", "year"), model = "cmg")
summary(regression_8)
pcdtest(regression_8)
coeffs_regression_8 <- as.data.frame(regression_8$indcoef)
coeffs_regression_8_clean <- as.data.frame(t(coeffs_regression))%>%
rename(beta_gdp_fossil = log_gdp_fossil,
beta_gdp_fossil.bar = log_gdp_fossil.bar,
beta_consumption.bar = y.bar,
intercept = "(Intercept)"
)%>%
rownames_to_column("country")
prediction_table <- merge(x=coeffs_regression_8_clean, y = predicted_data, by="country")%>%
mutate (fitted_values = intercept + log_consumption.bar*beta_consumption.bar+ log_gdp_fossil.bar*beta_gdp_fossil.bar + beta_gdp_fossil*log_gdp_fossil)%>%
mutate (absolute_error = abs(log_consumption - fitted_values))
mean_absolute_error_8 = mean(prediction_table$absolute_error)
initial_regression <- pmg(log_territorial ~ log_gdp + fossil_fuel_share + industry_share + imports_gns_percent + exports_gns_percent,
data = pred_table, index = c("country", "year"), model = "cmg")
summary(initial_regression)
pcdtest(initial_regression)
coeffs_initial_regression <- as.data.frame(t(as.data.frame(initial_regression$indcoef)))
colnames(coeffs_initial_regression) <- paste0("beta_", colnames(coeffs_initial_regression))
coeffs_initial_regression <- rownames_to_column(coeffs_initial_regression, "country")%>%
rename(intercept = "beta_(Intercept)")
prediction_table <- merge(x=coeffs_initial_regression, y = predicted_data, by="country")%>%
mutate (fitted_values = intercept +log_gdp*beta_log_gdp + industry_share*beta_industry_share + fossil_fuel_share*beta_fossil_fuel_share+
imports_gns_percent * beta_imports_gns_percent + exports_gns_percent * beta_exports_gns_percent + log_territorial.bar*beta_y.bar
+ log_gdp.bar*beta_log_gdp.bar + fossil_fuel_share.bar*beta_fossil_fuel_share.bar+ industry_share.bar*beta_industry_share.bar
+ imports_gns_percent.bar * beta_imports_gns_percent.bar + exports_gns_percent.bar * beta_exports_gns_percent.bar
)%>%
mutate (absolute_error = abs(log_territorial - fitted_values))
mean_absolute_error_initial = mean(prediction_table$absolute_error)
summary(prediction_table$absolute_error)
mean_absolute_error_initial
#Regression consumption emissions
initial_regression_cons <- pmg(log_consumption ~ log_gdp + fossil_fuel_share + industry_share + imports_gns_percent + exports_gns_percent,
data = pred_table, index = c("country", "year"), model = "cmg")
summary(initial_regression_cons)
pcdtest(initial_regression_cons)
coeffs_initial_regression_cons <- as.data.frame(t(as.data.frame(initial_regression_cons$indcoef)))
colnames(coeffs_initial_regression_cons) <- paste0("beta_", colnames(coeffs_initial_regression_cons))
coeffs_initial_regression_cons <- rownames_to_column(coeffs_initial_regression_cons, "country")%>%
rename(intercept = "beta_(Intercept)")
prediction_table_cons <- merge(x=coeffs_initial_regression_cons, y = predicted_data, by="country")%>%
mutate (fitted_values = intercept + log_gdp*beta_log_gdp + industry_share*beta_industry_share + fossil_fuel_share * beta_fossil_fuel_share +
imports_gns_percent * beta_imports_gns_percent + exports_gns_percent * beta_exports_gns_percent + log_consumption.bar*beta_y.bar
+ log_gdp.bar*beta_log_gdp.bar + fossil_fuel_share.bar*beta_fossil_fuel_share.bar+ industry_share.bar*beta_industry_share.bar
+ imports_gns_percent.bar * beta_imports_gns_percent.bar + exports_gns_percent.bar * beta_exports_gns_percent.bar
)%>%
mutate (absolute_error = abs(log_consumption - fitted_values))
summary(prediction_table_cons$absolute_error)
mean_absolute_error_initial_cons <- mean_absolute_error(prediction_table_cons)
mean_absolute_error_initial_cons
colnames(prediction_table)
test_regression <- pmg(log_territorial ~ log_gdp_fossil, data=pred_table,index = c("country", "year"), model = "cmg" )
summary(test_regression)
pcdtest(test_regression)
coeffs_test_regression <- as.data.frame(t(as.data.frame(test_regression$indcoef)))
colnames(coeffs_test_regression) <- paste0("beta_", colnames(coeffs_test_regression))
coeffs_test_regression <- rownames_to_column(coeffs_test_regression, "country")%>%
rename(intercept = "beta_(Intercept)")
prediction_table <- merge(x=coeffs_test_regression, y = predicted_data, by="country")%>%
mutate (fitted_values = intercept + log_gdp_fossil*beta_log_gdp_fossil + log_territorial.bar*beta_y.bar
+ log_gdp_fossil.bar*beta_log_gdp_fossil.bar
)%>%
mutate (absolute_error = abs(log_territorial - fitted_values))
mean_absolute_error_initial_test = mean(prediction_table$absolute_error)
mean_absolute_error_initial_test
regression_9 <- pmg(log_territorial ~ log_gdp, data=pred_table,index = c("country", "year"), model = "cmg" )
summary(regression_9)
pcdtest(regression_9)
coeffs_regression_9 <- as.data.frame(t(as.data.frame(regression_9$indcoef)))
colnames(coeffs_regression_9) <- paste0("beta_", colnames(coeffs_regression_9))
coeffs_regression_9 <- rownames_to_column(coeffs_regression_9, "country")%>%
rename(intercept = "beta_(Intercept)")
prediction_table <- merge(x=coeffs_regression_9, y = predicted_data, by="country")%>%
mutate (fitted_values = intercept + log_gdp*beta_log_gdp + log_territorial.bar*beta_y.bar
+ log_gdp.bar*beta_log_gdp.bar
)%>%
mutate (absolute_error = abs(log_territorial - fitted_values))
mean_absolute_error_initial_9 = mean(prediction_table$absolute_error)
mean_absolute_error_initial_9
prediction_table_10 <- prediction_table%>%
mutate (fitted_values =log_gdp*beta_log_gdp
+ log_gdp.bar*beta_log_gdp.bar
)%>%
mutate (absolute_error = abs(log_territorial - fitted_values))
mean_absolute_error_initial_10 = mean(prediction_table_10$absolute_error)
mean_absolute_error_initial_10 #Not good, must be changed
regression_11 <- pmg(transfer_emissions ~ log_gdp + imports_gns_percent + exports_gns_percent, data = pred_table,
index = c("country", "year"), model = "cmg")
summary(regression_11)
pcdtest(regression_11)
coeffs_regression_11 <- as.data.frame(t(as.data.frame(regression_11$indcoef)))
colnames(coeffs_regression_11) <- paste0("beta_", colnames(coeffs_regression_11))
coeffs_regression_11 <- rownames_to_column(coeffs_regression_11, "country")%>%
rename(intercept = "beta_(Intercept)")
prediction_table <- merge(x=coeffs_regression_11, y = predicted_data, by="country")%>%
mutate (fitted_values = intercept + log_gdp*beta_log_gdp + log_territorial.bar*beta_y.bar
+ log_gdp.bar*beta_log_gdp.bar + imports_gns_percent * beta_imports_gns_percent
+ imports_gns_percent.bar * beta_imports_gns_percent.bar + exports_gns_percent * beta_exports_gns_percent
+ exports_gns_percent.bar*beta_exports_gns_percent.bar
)%>%
mutate (absolute_error = abs(transfer_emissions - fitted_values))
mean_absolute_error_initial_11 = mean(prediction_table$absolute_error)
mean_absolute_error_initial_11 #1.094485
mean_transfer_emissions = sqrt(var(prediction_table$transfer_emissions))
mean_transfer_emissions # 2.569771
zz_problems <- pred_table %>%
filter(is.na(trade_balance_GnS) | is.na(trade_balance_goods))%>%
select(country, year)
pred_table_3 <- pred_table %>%
filter (!(country %in% zz_problems$country))
pcdtest(regression_12)
coeffs_regression_12 <- as.data.frame(t(as.data.frame(regression_12$indcoef)))
regression_13 <- pmg(territorial_emissions ~ gdp + fossil_fuel_share + imports_gns_percent + exports_gns_percent,
data = pred_table, index = c("country", "year"), model = "cmg")
summary(regression_13)
pcdtest(regression_13)
coeffs_regression_13 <- as.data.frame(t(as.data.frame(regression_13$indcoef)))
colnames(coeffs_regression_13) <- paste0("beta_", colnames(coeffs_regression_13))
coeffs_regression_13 <- rownames_to_column(coeffs_regression_13, "country")%>%
rename(intercept = "beta_(Intercept)")
prediction_table <- merge(x=coeffs_regression_13, y = predicted_data, by="country")%>%
mutate (fitted_values = intercept + gdp*beta_gdp + gdp.bar*beta_gdp.bar +territorial_emissions.bar * beta_y.bar
+ fossil_fuel_share * beta_fossil_fuel_share + fossil_fuel_share.bar * beta_fossil_fuel_share.bar
+ imports_gns_percent * beta_imports_gns_percent + exports_gns_percent * beta_exports_gns_percent
+ imports_gns_percent.bar * beta_imports_gns_percent.bar + exports_gns_percent.bar * beta_exports_gns_percent.bar
)%>%
mutate (absolute_error = abs(territorial_emissions - fitted_values))
mean_absolute_error_initial_13 = mean(prediction_table$absolute_error)
mean_absolute_error_initial_13#1.288
mean_transfer_emissions = sqrt(var(prediction_table$transfer_emissions))
mean_transfer_emissions #2.57
regression_14 <- pmg(log_consumption ~ log_territorial + log_gdp + imports_gns_percent
+ exports_gns_percent, data = pred_table, index = c("country", "year"), model = "cmg")
summary(regression_14)
pcdtest(regression_14)
coeffs_regression_14 <- as.data.frame(t(as.data.frame(regression_14$indcoef)))
colnames(coeffs_regression_14) <- paste0("beta_", colnames(coeffs_regression_14))
coeffs_regression_14 <- rownames_to_column(coeffs_regression_14, "country")%>%
rename(intercept = "beta_(Intercept)")
prediction_table <- merge(x=coeffs_regression_14, y = predicted_data, by="country")%>%
mutate (fitted_values = intercept + log_gdp*beta_log_gdp +log_consumption.bar * beta_y.bar
+log_territorial * beta_log_territorial + log_territorial.bar * beta_log_territorial.bar
+ imports_gns_percent * beta_imports_gns_percent + exports_gns_percent * beta_exports_gns_percent
+ imports_gns_percent.bar * beta_imports_gns_percent.bar + exports_gns_percent.bar * beta_exports_gns_percent.bar
+ log_gdp.bar * beta_log_gdp.bar
)%>%
mutate (absolute_error = abs(log_consumption - fitted_values))
mean_absolute_error_initial_14 = mean(prediction_table$absolute_error)
mean_absolute_error_initial_14#0.325
regression_15 <- pmg(log_consumption ~ log_territorial, data = pred_table, index = c("country", "year"), model = "cmg")
summary(regression_15)
pcdtest(regression_15)
coeffs_regression_15 <- as.data.frame(t(as.data.frame(regression_15$indcoef)))
colnames(coeffs_regression_15) <- paste0("beta_", colnames(coeffs_regression_15))
coeffs_regression_15 <- rownames_to_column(coeffs_regression_15, "country")%>%
rename(intercept = "beta_(Intercept)")
prediction_table <- merge(x=coeffs_regression_15, y = predicted_data, by="country")%>%
mutate (fitted_values = intercept +log_consumption.bar * beta_y.bar
+log_territorial * beta_log_territorial + log_territorial.bar * beta_log_territorial.bar
)%>%
mutate (absolute_error = abs(log_consumption - fitted_values))
mean_absolute_error_initial_15 = mean(prediction_table$absolute_error)
mean_absolute_error_initial_15#0.243
regression_16 <- pmg(consumption_emissions ~ territorial_emissions + gdp + trade_balance_GnS + trade_balance_goods,
data = pred_table_3, index = c("country", "year"), model = "cmg")
summary(regression_16)
pcdtest(regression_16)
coeffs_regression_16 <- as.data.frame(t(as.data.frame(regression_16$indcoef)))
colnames(coeffs_regression_16) <- paste0("beta_", colnames(coeffs_regression_16))
coeffs_regression_16 <- rownames_to_column(coeffs_regression_16, "country")%>%
rename(intercept = "beta_(Intercept)")
prediction_table <- merge(x=coeffs_regression_16, y = predicted_data, by="country")%>%
mutate (fitted_values = intercept +consumption_emissions.bar * beta_y.bar
+territorial_emissions * beta_territorial_emissions + territorial_emissions.bar * beta_territorial_emissions.bar
+ trade_balance_GnS*beta_trade_balance_GnS + trade_balance_GnS.bar * beta_trade_balance_GnS.bar
+ trade_balance_goods*beta_trade_balance_goods + trade_balance_goods.bar * beta_trade_balance_goods.bar
+gdp*beta_gdp + gdp.bar*beta_gdp.bar
)%>%
mutate (absolute_error = abs(consumption_emissions - fitted_values))
mean_absolute_error_initial_16 = mean(prediction_table$absolute_error)
mean_absolute_error_initial_16#2.01
regression_17 <- pmg(consumption_emissions ~ territorial_emissions, data = pred_table, index = c("country", "year"), model = "cmg")
summary(regression_17)
pcdtest(regression_17)
coeffs_regression_17 <- as.data.frame(t(as.data.frame(regression_17$indcoef)))
colnames(coeffs_regression_17) <- paste0("beta_", colnames(coeffs_regression_17))
coeffs_regression_17 <- rownames_to_column(coeffs_regression_17, "country")%>%
rename(intercept = "beta_(Intercept)")
prediction_table <- merge(x=coeffs_regression_17, y = predicted_data, by="country")%>%
mutate (fitted_values = intercept +consumption_emissions.bar * beta_y.bar
+territorial_emissions * beta_territorial_emissions + territorial_emissions.bar * beta_territorial_emissions.bar
)%>%
mutate (absolute_error = abs(consumption_emissions - fitted_values))
mean_absolute_error_initial_17 = mean(prediction_table$absolute_error)
mean_absolute_error_initial_17#1.018
library(dplyr)
library(readr)
library(stats)
library(tidyr)
library(openxlsx)
library(rlang)
library(plm)
library(stats)
library(tidyverse)
regression_data <- read.csv("regression_data.csv")
countries <- read.csv("countries_table.csv")
#Adding one column as the share of territorial emissions (not per capita) over all countries
regression_data <- regression_data%>%
group_by(year)%>%
mutate( territorial_emissions.country = territorial_emissions * population )%>%
mutate(territorial_emissions.share =  territorial_emissions.country/sum(territorial_emissions.country, na.rm = TRUE))%>%
ungroup()
#Adding a few log variables
regression_data <- regression_data%>%
rename(imports_gns_percent.world = imports_share.world)%>%
rename(exports_gns_percent.world = exports_share.world)%>%
mutate(log_ffsh = log(fossil_fuel_share))%>%
mutate(log_ffsh.world = log(fossil_fuel_share.world))%>%
mutate(log_imports_gns_percent = log(imports_gns_percent))%>%
mutate(log_exports_gns_percent = log(exports_gns_percent))%>%
mutate(log_exports_gns_percent.world = log(exports_gns_percent.world))%>%
mutate(log_imports_gns_percent.world = log(imports_gns_percent.world))%>%
mutate(log_industry_share = log(industry_share))%>%
mutate(log_industry_share.world = log(industry_share.world))%>%
mutate(log_emissions_pc.world = log(emissions_pc.world))%>%
mutate(log_gdp.world = log(gdp.world))%>%
mutate(trade_gns_percent.world = imports_gns_percent.world+exports_gns_percent.world)%>%
mutate(trade_balance_gns_percent = exports_gns_percent - imports_gns_percent)
test_data <- regression_data%>%
filter(country=="USA")
test_data <- regression_data%>%
filter(country %in% c("OMN", "TKM", "BRN"))
#This function selects the biggest number of countries and timespan possible depending on the explanatory variables used
regression_emissions <- function(data = regression_data, emissions, explanatory_variables){
#Firstly the time span must be defined for the data.
#Define variables
start_year = 1989
end_year = 2024
annoying_countries <- regression_data %>%
filter(year==1990)%>%
select(country)%>%
distinct(country)
cols_to_exclude <- c("fossil_fuel_share.world", "industry_share.world")
cols_to_exclude_present <- intersect(cols_to_exclude, explanatory_variables)
restricted_data <- data%>%
select(c("year", "country", "territorial_emissions.share" ,emissions, explanatory_variables, "territorial_emissions.share"))
while(dim(annoying_countries)[1] > 80){
if(end_year > 2020){
end_year=end_year-1
}
start_year = start_year + 1
restricted_data <- restricted_data %>%
filter(year >= start_year)%>%
filter(year <= end_year)
annoying_countries <- restricted_data %>%
filter(if_any(-all_of(cols_to_exclude_present), is.na)) %>%
select(country)%>%
distinct(country)
}
restricted_data <- restricted_data%>%
filter(!(country %in% annoying_countries$country))
return(restricted_data)
}
#This function runs the required regressions and returns a tables of predicted data for the asked year
prediction_regression <- function(data = regression_data, emissions, explanatory_variables, predicted_data,
logged_emissions=FALSE, fixed_effect = FALSE){
rhs <- paste(explanatory_variables, collapse = " + ")
formula = paste0(emissions, "~ ", rhs, " - 1")
if(isTRUE(fixed_effect)){
formula = paste0(emissions, "~ ", rhs)
}
regression_test <- pmg(as.character(formula), data = data, index = c("country","year"), model = "mg")
print(summary(regression_test))
print(pcdtest(regression_test))
coeffs_regression_test <- as.data.frame(t(as.data.frame(regression_test$indcoef)))
colnames(coeffs_regression_test) <- paste0("beta_", colnames(coeffs_regression_test))
coeffs_regression_test <- rownames_to_column(coeffs_regression_test, "country")
if(isTRUE(fixed_effect)){
coeffs_regression_test <- coeffs_regression_test%>%
rename(intercept = "beta_(Intercept)")
}
prediction_table <- merge(x=coeffs_regression_test, y = predicted_data, by="country")
for (var in explanatory_variables) {
prediction_table[[paste0("term_", var)]] <- prediction_table[[var]] * prediction_table[[paste0("beta_", var)]]
}
prediction_table <- prediction_table %>%
rowwise() %>%
mutate(fitted_values = sum(c_across(starts_with("term_"))),
absolute_error = abs(.data[[emissions]] - fitted_values)) %>%
ungroup()
if(isTRUE(fixed_effect)){
prediction_table <- prediction_table%>%
mutate(fitted_values = fitted_values + intercept,
absolute_error = abs(.data[[emissions]] - fitted_values)
)}
if(isTRUE(logged_emissions)){
prediction_table<- prediction_table%>%
mutate(true_emissions = exp(.data[[emissions]]),
true_fitted_values = exp(fitted_values),
absolute_error = abs(true_emissions - true_fitted_values))
}
return(prediction_table)
}
#This function computes the mean absoluter error from a prediction table
mean_absolute_error <- function(data = regression_data){
mea = sum(data$absolute_error * data$territorial_emissions.share, na.rm = TRUE)/sum(data$territorial_emissions.share, na.rm = TRUE)
return(mea)
}
#Regression 1 : territorial emissions ~ emissions.bar + ffsh + ffsh.bar + gdp + gdp.bar
data_table <- regression_emissions(data = regression_data, "territorial_emissions",  c("emissions_pc.world", "fossil_fuel_share", "gdp", "gdp.world", "fossil_fuel_share.world"))
data_base <- data_table %>%
filter(year <= 2012) #select ten years before the end year for prediction
data_pred <- data_table%>%
filter(year ==2022)
regression_results_1 <- prediction_regression(data = data_base, emissions = "territorial_emissions",
explanatory_variables = c("emissions_pc.world", "fossil_fuel_share", "gdp", "gdp.world"),
predicted_data = data_pred, fixed_effect = TRUE
)
summary(regression_results_1$absolute_error)
mea_regression_1 <- mean_absolute_error(regression_results_1)
mea_regression_1
#Regression 2
data_table_2 <- regression_emissions(data = regression_data, "log_consumption",
c("log_emissions_pc.world", "log_territorial", "log_gdp", "log_gdp.world",
"log_imports_gns_percent", "log_imports_gns_percent.world", "log_exports_gns_percent",
"log_exports_gns_percent.world"))
data_base <- data_table_2 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_2%>%
filter(year ==2020)
regression_results_2 <- prediction_regression(data = data_base, emissions = "log_consumption",
explanatory_variables = c("log_emissions_pc.world", "log_territorial", "log_gdp", "log_gdp.world",
"log_imports_gns_percent", "log_imports_gns_percent.world", "log_exports_gns_percent",
"log_exports_gns_percent.world"),
predicted_data = data_pred, logged_emissions = TRUE)
summary(regression_results_2$absolute_error)
mea_regression_2 <- mean_absolute_error(regression_results_2)
mea_regression_2
#Regression 3 : Regressions from Liddle(2018)
#I will need to add fossil_fuel_share.world when I have decided what to do with it
data_table_3 <- regression_emissions(data = regression_data, "log_territorial", c("log_gdp", "log_gdp.world", "fossil_fuel_share","fossil_fuel_share.world",
"industry_share", "industry_share.world", "trade_share", "trade_gns_percent.world"))
data_base <- data_table_3 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_3%>%
filter(year ==2020)
regression_results_3 <- prediction_regression(data = data_base, emissions = "log_territorial", explanatory_variables =c("log_gdp",
"log_gdp.world", "fossil_fuel_share",
"industry_share", "industry_share.world",
"trade_share", "trade_gns_percent.world"),
predicted_data = data_pred, logged_emissions = TRUE)
summary(regression_results_3$absolute_error)
mea_regression_3 <- mean_absolute_error(regression_results_3)
mea_regression_3
#Regression 4
#I will need to add fossil_fuel_share.world when I have decided what to do with it
data_table_4 <- regression_emissions(data = regression_data, "log_consumption", c("log_gdp", "log_gdp.world", "fossil_fuel_share","fossil_fuel_share.world",
"industry_share", "industry_share.world", "trade_share", "trade_gns_percent.world"))
data_base <- data_table_4 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_4%>%
filter(year ==2020)
regression_results_4 <- prediction_regression(data = data_base, emissions = "log_consumption", explanatory_variables =c("log_gdp",
"log_gdp.world", "fossil_fuel_share", "industry_share", "industry_share.world",
"trade_gns_percent.world", "trade_share"),
predicted_data = data_pred, logged_emissions = TRUE)
summary(regression_results_4$absolute_error)
mea_regression_4 <- mean_absolute_error(regression_results_4)
mea_regression_4
data_table_5 <- regression_emissions(data = regression_data, "log_consumption", c("log_gdp", "log_ffsh", "log_exports_gns_percent", "log_imports_gns_percent",
"log_exports_gns_percent.world", "log_imports_gns_percent.world"))
data_base <- data_table_5 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_5%>%
filter(year ==2020)
regression_results_5 <- prediction_regression(data = data_base, emissions = "log_consumption", explanatory_variables = c("log_gdp",
"log_ffsh", "log_exports_gns_percent", "log_imports_gns_percent", "log_exports_gns_percent.world",
"log_imports_gns_percent.world"), predicted_data = data_pred, logged_emissions = TRUE)
summary(regression_results_5$absolute_error)
mea_regression_5 <- mean_absolute_error(regression_results_5)
mea_regression_5
#Regression 6
#Add an intercept on this one too
data_table_6 <- regression_emissions(data = regression_data, "log_territorial", c("log_gdp", "log_ffsh", "log_exports_gns_percent", "log_imports_gns_percent",
"log_exports_gns_percent.world", "log_imports_gns_percent.world"))
data_base <- data_table_6 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_6%>%
filter(year ==2020)
regression_results_6 <- prediction_regression(data = data_base, emissions = "log_territorial", explanatory_variables = c("log_gdp",
"log_ffsh", "log_exports_gns_percent", "log_imports_gns_percent", "log_exports_gns_percent.world",
"log_imports_gns_percent.world"), predicted_data = data_pred, logged_emissions = TRUE,
fixed_effect = TRUE)
summary(regression_results_6$absolute_error)
mea_regression_6 <- mean_absolute_error(regression_results_6)
mea_regression_6
regression_data_7 <- regression_data%>%
mutate(difference_variable = log_territorial - log_ffsh - log_gdp)
data_table_7 <- regression_emissions(data = regression_data_7, "difference_variable", c("log_gdp", "log_ffsh", "log_exports_gns_percent", "log_imports_gns_percent",
"log_exports_gns_percent.world", "log_imports_gns_percent.world", "log_gdp.world", "log_industry_share",
"log_industry_share.world", "log_emissions_pc.world", "log_territorial", "territorial_emissions"))
data_base <- data_table_7 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_7%>%
filter(year ==2020)
regression_results_7 <- prediction_regression(data = data_base, emissions = "difference_variable", explanatory_variables = c("log_exports_gns_percent", "log_imports_gns_percent",
"log_exports_gns_percent.world", "log_imports_gns_percent.world", "log_gdp.world", "log_industry_share",
"log_industry_share.world", "log_emissions_pc.world"),
predicted_data = data_pred, logged_emissions = FALSE, fixed_effect = FALSE)
regression_results_7 <- regression_results_7%>%
mutate(emissions_fitted_values = exp(fitted_values+log_gdp+log_ffsh))%>%
mutate(absolute_error = abs(emissions_fitted_values - territorial_emissions))
summary(regression_results_7$absolute_error)
mea_regression_7 <- mean_absolute_error(regression_results_7)
mea_regression_7
regression_data_8 <- regression_data%>%
mutate(emissions_balance_percent = ((consumption_emissions/territorial_emissions)-1)*100)
data_table_8 <- regression_emissions(data = regression_data_8, "emissions_balance_percent", c("log_gdp", "fossil_fuel_share", "exports_gns_percent", "imports_gns_percent",
"exports_gns_percent.world", "imports_gns_percent.world", "gdp.world", "industry_share",
"industry_share.world","territorial_emissions", "emissions_pc.world", "consumption_emissions", "trade_balance_gns_percent"))
data_base <- data_table_8 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_8%>%
filter(year ==2020)
regression_results_8 <- prediction_regression(data = data_base, emissions = "emissions_balance_percent", explanatory_variables = c("log_gdp", "fossil_fuel_share", "exports_gns_percent", "imports_gns_percent",
"exports_gns_percent.world", "imports_gns_percent.world", "gdp.world", "industry_share",
"industry_share.world","territorial_emissions", "emissions_pc.world"),
predicted_data = data_pred, logged_emissions = FALSE, fixed_effect=TRUE)
regression_results_8 <- regression_results_8%>%
mutate(emissions_fitted_values = (fitted_values/100+1)*territorial_emissions)%>%
mutate(absolute_error = abs(emissions_fitted_values - consumption_emissions))
summary(regression_results_8$absolute_error)
mea_regression_8 <- mean_absolute_error(regression_results_8)
mea_regression_8
regression_results_9 <- prediction_regression(data = data_base, emissions = "emissions_balance_percent", explanatory_variables = c("exports_gns_percent", "imports_gns_percent",
"exports_gns_percent.world"),
predicted_data = data_pred, logged_emissions = FALSE, fixed_effect = TRUE)
regression_results_9 <- regression_results_9%>%
mutate(emissions_fitted_values = (fitted_values/100+1)*territorial_emissions)%>%
mutate(absolute_error = abs(emissions_fitted_values - consumption_emissions))
summary(regression_results_9$absolute_error)
mea_regression_9 <- mean_absolute_error(regression_results_9)
mea_regression_9
regression_results_10 <- prediction_regression(data = data_base, emissions = "emissions_balance_percent", explanatory_variables = c("trade_balance_gns_percent"),
predicted_data = data_pred, logged_emissions = FALSE, fixed_effect = TRUE)
regression_results_10 <- regression_results_10%>%
mutate(emissions_fitted_values = (fitted_values/100+1)*territorial_emissions)%>%
mutate(absolute_error = abs(emissions_fitted_values - consumption_emissions))
summary(regression_results_10$absolute_error)
mea_regression_10 <- mean_absolute_error(regression_results_10)
mea_regression_10
regression_results_11 <- prediction_regression(data = data_base, emissions = "emissions_balance_percent", explanatory_variables = c("exports_gns_percent", "imports_gns_percent"),
predicted_data = data_pred, logged_emissions = FALSE, fixed_effect = TRUE)
regression_results_11 <- regression_results_11%>%
mutate(emissions_fitted_values = (fitted_values/100+1)*territorial_emissions)%>%
mutate(absolute_error = abs(emissions_fitted_values - consumption_emissions))
summary(regression_results_11$absolute_error)
mea_regression_11 <- mean_absolute_error(regression_results_11)
mea_regression_11
