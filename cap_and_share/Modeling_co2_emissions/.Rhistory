data_pred <- data_table_8%>%
filter(year ==2020)
regression_results_8 <- prediction_regression(data = data_base, emissions = "emissions_balance_percent", explanatory_variables = c("log_gdp", "fossil_fuel_share", "exports_gns_percent", "imports_gns_percent",
"exports_gns_percent.world", "imports_gns_percent.world", "gdp.world", "industry_share",
"industry_share.world","territorial_emissions", "emissions_pc.world"),
predicted_data = data_pred, logged_emissions = FALSE)
regression_results_8 <- regression_results_8%>%
mutate(emissions_fitted_values = (fitted_values/100+1)*territorial_emissions)%>%
mutate(absolute_error = abs(emissions_fitted_values - consumtpion_emissions))
data_table_8 <- regression_emissions(data = regression_data_8, "emissions_balance_percent", c("log_gdp", "fossil_fuel_share", "exports_gns_percent", "imports_gns_percent",
"exports_gns_percent.world", "imports_gns_percent.world", "gdp.world", "industry_share",
"industry_share.world","territorial_emissions", "emissions_pc.world", "consumption_emissions"))
data_base <- data_table_8 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_8%>%
filter(year ==2020)
regression_results_8 <- prediction_regression(data = data_base, emissions = "emissions_balance_percent", explanatory_variables = c("log_gdp", "fossil_fuel_share", "exports_gns_percent", "imports_gns_percent",
"exports_gns_percent.world", "imports_gns_percent.world", "gdp.world", "industry_share",
"industry_share.world","territorial_emissions", "emissions_pc.world"),
predicted_data = data_pred, logged_emissions = FALSE)
regression_results_8 <- regression_results_8%>%
mutate(emissions_fitted_values = (fitted_values/100+1)*territorial_emissions)%>%
mutate(absolute_error = abs(emissions_fitted_values - consumtpion_emissions))
regression_results_8 <- regression_results_8%>%
mutate(emissions_fitted_values = (fitted_values/100+1)*territorial_emissions)%>%
mutate(absolute_error = abs(emissions_fitted_values - consumption_emissions))
summary(regression_results_8$absolute_error)
mea_regression_8 <- mean_absolute_error(regression_results_8)
mea_regression_8
regression_results_9 <- prediction_regression(data = data_base, emissions = "emissions_balance_percent", explanatory_variables = c("exports_gns_percent", "imports_gns_percent",
"exports_gns_percent.world", "imports_gns_percent.world"),
predicted_data = data_pred, logged_emissions = FALSE)
regression_results_8 <- regression_results_8%>%
mutate(emissions_fitted_values = (fitted_values/100+1)*territorial_emissions)%>%
mutate(absolute_error = abs(emissions_fitted_values - consumption_emissions))
summary(regression_results_8$absolute_error)
mea_regression_8 <- mean_absolute_error(regression_results_8)
mea_regression_8
regression_results_9 <- regression_results_9%>%
mutate(emissions_fitted_values = (fitted_values/100+1)*territorial_emissions)%>%
mutate(absolute_error = abs(emissions_fitted_values - consumption_emissions))
summary(regression_results_9$absolute_error)
mea_regression_9 <- mean_absolute_error(regression_results_8)
mea_regression_9
mea_regression_9 <- mean_absolute_error(regression_results_9)
mea_regression_9
#This function runs the required regressions and returns a tables of predicted data for the asked year
prediction_regression <- function(data = regression_data, emissions, explanatory_variables, predicted_data,
logged_emissions=FALSE, fixed_effect = FALSE){
rhs <- paste(explanatory_variables, collapse = " + ")
formula = paste0(emissions, "~ ", rhs, " - 1")
if(isTRUE(fixed_effect)){
formula = paste0(emissions, "~ ", rhs)
}
regression_test <- pmg(as.character(formula), data = data, index = c("country","year"), model = "mg")
print(summary(regression_test))
print(pcdtest(regression_test))
coeffs_regression_test <- as.data.frame(t(as.data.frame(regression_test$indcoef)))
colnames(coeffs_regression_test) <- paste0("beta_", colnames(coeffs_regression_test))
coeffs_regression_test <- rownames_to_column(coeffs_regression_test, "country")
if(isTRUE(fixed_effect)){
coeffs_regression_test <- coeffs_regression_test%>%
rename(intercept = "beta_(Intercept)")
}
prediction_table <- merge(x=coeffs_regression_test, y = predicted_data, by="country")
for (var in explanatory_variables) {
prediction_table[[paste0("term_", var)]] <- prediction_table[[var]] * prediction_table[[paste0("beta_", var)]]
}
prediction_table <- prediction_table %>%
rowwise() %>%
mutate(fitted_values = sum(c_across(starts_with("term_"))),
absolute_error = abs(.data[[emissions]] - fitted_values)) %>%
ungroup()
if(isTRUE(fixed_effect)){
prediction_table <- prediction_table%>%
mutate(fitted_values = fitted_values + intercept,
absolute_error = abs(.data[[emissions]] - fitted_values)
)}
if(isTRUE(logged_emissions)){
prediction_table<- prediction_table%>%
mutate(true_emissions = exp(.data[[emissions]]),
true_fitted_values = exp(fitted_values),
absolute_error = abs(true_emissions - true_fitted_values))
}
return(prediction_table)
}
regression_data_8 <- regression_data%>%
mutate(emissions_balance_percent = ((consumption_emissions/territorial_emissions)-1)*100)
data_table_8 <- regression_emissions(data = regression_data_8, "emissions_balance_percent", c("log_gdp", "fossil_fuel_share", "exports_gns_percent", "imports_gns_percent",
"exports_gns_percent.world", "imports_gns_percent.world", "gdp.world", "industry_share",
"industry_share.world","territorial_emissions", "emissions_pc.world", "consumption_emissions"))
data_base <- data_table_8 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_8%>%
filter(year ==2020)
regression_results_8 <- prediction_regression(data = data_base, emissions = "emissions_balance_percent", explanatory_variables = c("log_gdp", "fossil_fuel_share", "exports_gns_percent", "imports_gns_percent",
"exports_gns_percent.world", "imports_gns_percent.world", "gdp.world", "industry_share",
"industry_share.world","territorial_emissions", "emissions_pc.world"),
predicted_data = data_pred, logged_emissions = FALSE, fixed_effect=TRUE)
regression_results_8 <- regression_results_8%>%
mutate(emissions_fitted_values = (fitted_values/100+1)*territorial_emissions)%>%
mutate(absolute_error = abs(emissions_fitted_values - consumption_emissions))
summary(regression_results_8$absolute_error)
mea_regression_8 <- mean_absolute_error(regression_results_8)
mea_regression_8
regression_results_9 <- prediction_regression(data = data_base, emissions = "emissions_balance_percent", explanatory_variables = c("exports_gns_percent", "imports_gns_percent",
"exports_gns_percent.world", "imports_gns_percent.world"),
predicted_data = data_pred, logged_emissions = FALSE, fixed_effect = TRUE)
regression_results_9 <- regression_results_9%>%
mutate(emissions_fitted_values = (fitted_values/100+1)*territorial_emissions)%>%
mutate(absolute_error = abs(emissions_fitted_values - consumption_emissions))
summary(regression_results_9$absolute_error)
mea_regression_9 <- mean_absolute_error(regression_results_9)
mea_regression_9
regression_data <- read.csv("regression_data.csv")
#Adding one column as the share of territorial emissions (not per capita) over all countries
regression_data <- regression_data%>%
group_by(year)%>%
mutate( territorial_emissions.country = territorial_emissions * population )%>%
mutate(territorial_emissions.share =  territorial_emissions.country/sum(territorial_emissions.country, na.rm = TRUE))%>%
ungroup()
#Adding a few log variables
regression_data <- regression_data%>%
rename(imports_gns_percent.world = imports_share.world)%>%
rename(exports_gns_percent.world = exports_share.world)%>%
mutate(log_ffsh = log(fossil_fuel_share))%>%
mutate(log_ffsh.world = log(fossil_fuel_share.world))%>%
mutate(log_imports_gns_percent = log(imports_gns_percent))%>%
mutate(log_exports_gns_percent = log(exports_gns_percent))%>%
mutate(log_exports_gns_percent.world = log(exports_gns_percent.world))%>%
mutate(log_imports_gns_percent.world = log(imports_gns_percent.world))%>%
mutate(log_industry_share = log(industry_share))%>%
mutate(log_industry_share.world = log(industry_share.world))%>%
mutate(log_emissions_pc.world = log(emissions_pc.world))%>%
mutate(log_gdp.world = log(gdp.world))%>%
mutate(trade_gns_percent.world = imports_gns_percent.world+exports_gns_percent.world)%>%
mutate(trade_balance_percent = exports_gns_percent - imports_gns_percent)
regression_data <- read.csv("regression_data.csv")
#Adding one column as the share of territorial emissions (not per capita) over all countries
regression_data <- regression_data%>%
group_by(year)%>%
mutate( territorial_emissions.country = territorial_emissions * population )%>%
mutate(territorial_emissions.share =  territorial_emissions.country/sum(territorial_emissions.country, na.rm = TRUE))%>%
ungroup()
#Adding a few log variables
regression_data <- regression_data%>%
rename(imports_gns_percent.world = imports_share.world)%>%
rename(exports_gns_percent.world = exports_share.world)%>%
mutate(log_ffsh = log(fossil_fuel_share))%>%
mutate(log_ffsh.world = log(fossil_fuel_share.world))%>%
mutate(log_imports_gns_percent = log(imports_gns_percent))%>%
mutate(log_exports_gns_percent = log(exports_gns_percent))%>%
mutate(log_exports_gns_percent.world = log(exports_gns_percent.world))%>%
mutate(log_imports_gns_percent.world = log(imports_gns_percent.world))%>%
mutate(log_industry_share = log(industry_share))%>%
mutate(log_industry_share.world = log(industry_share.world))%>%
mutate(log_emissions_pc.world = log(emissions_pc.world))%>%
mutate(log_gdp.world = log(gdp.world))%>%
mutate(trade_gns_percent.world = imports_gns_percent.world+exports_gns_percent.world)%>%
mutate(trade_balance_gns_percent = exports_gns_percent - imports_gns_percent)
regression_results_8 <- prediction_regression(data = data_base, emissions = "emissions_balance_percent", explanatory_variables = c("log_gdp", "fossil_fuel_share", "exports_gns_percent", "imports_gns_percent",
"exports_gns_percent.world", "imports_gns_percent.world", "gdp.world", "industry_share",
"industry_share.world","territorial_emissions", "emissions_pc.world", "trade_balance_gns_percent"),
predicted_data = data_pred, logged_emissions = FALSE, fixed_effect=TRUE)
regression_data <- read.csv("regression_data.csv")
#Adding one column as the share of territorial emissions (not per capita) over all countries
regression_data <- regression_data%>%
group_by(year)%>%
mutate( territorial_emissions.country = territorial_emissions * population )%>%
mutate(territorial_emissions.share =  territorial_emissions.country/sum(territorial_emissions.country, na.rm = TRUE))%>%
ungroup()
#Adding a few log variables
regression_data <- regression_data%>%
rename(imports_gns_percent.world = imports_share.world)%>%
rename(exports_gns_percent.world = exports_share.world)%>%
mutate(log_ffsh = log(fossil_fuel_share))%>%
mutate(log_ffsh.world = log(fossil_fuel_share.world))%>%
mutate(log_imports_gns_percent = log(imports_gns_percent))%>%
mutate(log_exports_gns_percent = log(exports_gns_percent))%>%
mutate(log_exports_gns_percent.world = log(exports_gns_percent.world))%>%
mutate(log_imports_gns_percent.world = log(imports_gns_percent.world))%>%
mutate(log_industry_share = log(industry_share))%>%
mutate(log_industry_share.world = log(industry_share.world))%>%
mutate(log_emissions_pc.world = log(emissions_pc.world))%>%
mutate(log_gdp.world = log(gdp.world))%>%
mutate(trade_gns_percent.world = imports_gns_percent.world+exports_gns_percent.world)%>%
mutate(trade_balance_gns_percent = exports_gns_percent - imports_gns_percent)
data_table_8 <- regression_emissions(data = regression_data_8, "emissions_balance_percent", c("log_gdp", "fossil_fuel_share", "exports_gns_percent", "imports_gns_percent",
"exports_gns_percent.world", "imports_gns_percent.world", "gdp.world", "industry_share",
"industry_share.world","territorial_emissions", "emissions_pc.world", "consumption_emissions", "trade_balance_gns_percent"))
regression_data_8 <- regression_data%>%
mutate(emissions_balance_percent = ((consumption_emissions/territorial_emissions)-1)*100)
data_table_8 <- regression_emissions(data = regression_data_8, "emissions_balance_percent", c("log_gdp", "fossil_fuel_share", "exports_gns_percent", "imports_gns_percent",
"exports_gns_percent.world", "imports_gns_percent.world", "gdp.world", "industry_share",
"industry_share.world","territorial_emissions", "emissions_pc.world", "consumption_emissions", "trade_balance_gns_percent"))
data_base <- data_table_8 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_8%>%
filter(year ==2020)
regression_results_8 <- prediction_regression(data = data_base, emissions = "emissions_balance_percent", explanatory_variables = c("log_gdp", "fossil_fuel_share", "exports_gns_percent", "imports_gns_percent",
"exports_gns_percent.world", "imports_gns_percent.world", "gdp.world", "industry_share",
"industry_share.world","territorial_emissions", "emissions_pc.world"),
predicted_data = data_pred, logged_emissions = FALSE, fixed_effect=TRUE)
regression_results_8 <- regression_results_8%>%
mutate(emissions_fitted_values = (fitted_values/100+1)*territorial_emissions)%>%
mutate(absolute_error = abs(emissions_fitted_values - consumption_emissions))
summary(regression_results_8$absolute_error)
mea_regression_8 <- mean_absolute_error(regression_results_8)
mea_regression_8
regression_results_9 <- prediction_regression(data = data_base, emissions = "emissions_balance_percent", explanatory_variables = c("exports_gns_percent", "imports_gns_percent",
"exports_gns_percent.world", "imports_gns_percent.world"),
predicted_data = data_pred, logged_emissions = FALSE, fixed_effect = TRUE)
regression_results_9 <- regression_results_9%>%
mutate(emissions_fitted_values = (fitted_values/100+1)*territorial_emissions)%>%
mutate(absolute_error = abs(emissions_fitted_values - consumption_emissions))
summary(regression_results_9$absolute_error)
mea_regression_9 <- mean_absolute_error(regression_results_9)
mea_regression_9
regression_results_10 <- prediction_regression(data = data_base, emissions = "emissions_balance_percent", explanatory_variables = c("trade_balance_gns_percent"),
predicted_data = data_pred, logged_emissions = FALSE, fixed_effect = TRUE)
regression_results_10 <- regression_results_10%>%
mutate(emissions_fitted_values = (fitted_values/100+1)*territorial_emissions)%>%
mutate(absolute_error = abs(emissions_fitted_values - consumption_emissions))
summary(regression_results_10$absolute_error)
mea_regression_10 <- mean_absolute_error(regression_results_10)
mea_regression_10
regression_results_11 <- prediction_regression(data = data_base, emissions = "emissions_balance_percent", explanatory_variables = c("exports_gns_percent", "imports_gns_percent"),
predicted_data = data_pred, logged_emissions = FALSE, fixed_effect = TRUE)
regression_results_11 <- regression_results_11%>%
mutate(emissions_fitted_values = (fitted_values/100+1)*territorial_emissions)%>%
mutate(absolute_error = abs(emissions_fitted_values - consumption_emissions))
summary(regression_results_11$absolute_error)
mea_regression_11 <- mean_absolute_error(regression_results_11)
mea_regression_11
regression_results_9 <- prediction_regression(data = data_base, emissions = "emissions_balance_percent", explanatory_variables = c("exports_gns_percent", "imports_gns_percent",
"exports_gns_percent.world"),
predicted_data = data_pred, logged_emissions = FALSE, fixed_effect = TRUE)
regression_results_9 <- regression_results_9%>%
mutate(emissions_fitted_values = (fitted_values/100+1)*territorial_emissions)%>%
mutate(absolute_error = abs(emissions_fitted_values - consumption_emissions))
summary(regression_results_9$absolute_error)
mea_regression_9 <- mean_absolute_error(regression_results_9)
mea_regression_9
regression_results_9 <- prediction_regression(data = data_base, emissions = "emissions_balance_percent", explanatory_variables = c("exports_gns_percent", "imports_gns_percent",
"exports_gns_percent.world", "imports_gns_percent.world"),
predicted_data = data_pred, logged_emissions = FALSE, fixed_effect = TRUE)
regression_results_9 <- regression_results_9%>%
mutate(emissions_fitted_values = (fitted_values/100+1)*territorial_emissions)%>%
mutate(absolute_error = abs(emissions_fitted_values - consumption_emissions))
summary(regression_results_9$absolute_error)
mea_regression_9 <- mean_absolute_error(regression_results_9)
mea_regression_9
regression_results_9 <- prediction_regression(data = data_base, emissions = "emissions_balance_percent", explanatory_variables = c("exports_gns_percent", "imports_gns_percent",
"imports_gns_percent.world"),
predicted_data = data_pred, logged_emissions = FALSE, fixed_effect = TRUE)
regression_results_9 <- regression_results_9%>%
mutate(emissions_fitted_values = (fitted_values/100+1)*territorial_emissions)%>%
mutate(absolute_error = abs(emissions_fitted_values - consumption_emissions))
summary(regression_results_9$absolute_error)
mea_regression_9 <- mean_absolute_error(regression_results_9)
mea_regression_9
regression_results_9 <- prediction_regression(data = data_base, emissions = "emissions_balance_percent", explanatory_variables = c("exports_gns_percent", "imports_gns_percent",
"exports_gns_percent.world"),
predicted_data = data_pred, logged_emissions = FALSE, fixed_effect = TRUE)
regression_results_9 <- regression_results_9%>%
mutate(emissions_fitted_values = (fitted_values/100+1)*territorial_emissions)%>%
mutate(absolute_error = abs(emissions_fitted_values - consumption_emissions))
summary(regression_results_9$absolute_error)
mea_regression_9 <- mean_absolute_error(regression_results_9)
mea_regression_9
regression_results_11 <- prediction_regression(data = data_base, emissions = "emissions_balance_percent", explanatory_variables = c("exports_gns_percent", "imports_gns_percent"),
predicted_data = data_pred, logged_emissions = FALSE, fixed_effect = TRUE)
regression_results_11 <- regression_results_11%>%
mutate(emissions_fitted_values = (fitted_values/100+1)*territorial_emissions)%>%
mutate(absolute_error = abs(emissions_fitted_values - consumption_emissions))
summary(regression_results_11$absolute_error)
mea_regression_11 <- mean_absolute_error(regression_results_11)
mea_regression_11
regression_data_7 <- regression_data%>%
mutate(difference_variable = log_territorial - log_ffsh - log_gdp)
data_table_7 <- regression_emissions(data = regression_data_7, "difference_variable", c("log_gdp", "log_ffsh", "log_exports_gns_percent", "log_imports_gns_percent",
"log_exports_gns_percent.world", "log_imports_gns_percent.world", "log_gdp.world", "log_industry_share",
"log_industry_share.world", "log_emissions_pc.world", "log_territorial", "territorial_emissions"))
data_base <- data_table_7 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_7%>%
filter(year ==2020)
regression_results_7 <- prediction_regression(data = data_base, emissions = "difference_variable", explanatory_variables = c("log_exports_gns_percent", "log_imports_gns_percent",
"log_exports_gns_percent.world", "log_imports_gns_percent.world", "log_gdp.world", "log_industry_share",
"log_industry_share.world", "log_emissions_pc.world"),
predicted_data = data_pred, logged_emissions = FALSE)
regression_results_7 <- regression_results_7%>%
mutate(emissions_fitted_values = exp(fitted_values+log_gdp+log_ffsh))%>%
mutate(absolute_error = abs(emissions_fitted_values - territorial_emissions))
summary(regression_results_7$absolute_error)
mea_regression_7 <- mean_absolute_error(regression_results_7)
mea_regression_7
regression_results_7 <- prediction_regression(data = data_base, emissions = "difference_variable", explanatory_variables = c("log_exports_gns_percent", "log_imports_gns_percent",
"log_exports_gns_percent.world", "log_imports_gns_percent.world", "log_gdp.world", "log_industry_share",
"log_industry_share.world", "log_emissions_pc.world"),
predicted_data = data_pred, logged_emissions = FALSE, intercept = TRUE)
regression_results_7 <- prediction_regression(data = data_base, emissions = "difference_variable", explanatory_variables = c("log_exports_gns_percent", "log_imports_gns_percent",
"log_exports_gns_percent.world", "log_imports_gns_percent.world", "log_gdp.world", "log_industry_share",
"log_industry_share.world", "log_emissions_pc.world"),
predicted_data = data_pred, logged_emissions = FALSE, fixed_effect = TRUE)
regression_results_7 <- regression_results_7%>%
mutate(emissions_fitted_values = exp(fitted_values+log_gdp+log_ffsh))%>%
mutate(absolute_error = abs(emissions_fitted_values - territorial_emissions))
summary(regression_results_7$absolute_error)
mea_regression_7 <- mean_absolute_error(regression_results_7)
mea_regression_7
regression_results_7 <- prediction_regression(data = data_base, emissions = "difference_variable", explanatory_variables = c("log_exports_gns_percent", "log_imports_gns_percent",
"log_exports_gns_percent.world", "log_imports_gns_percent.world", "log_gdp.world", "log_industry_share",
"log_industry_share.world", "log_emissions_pc.world"),
predicted_data = data_pred, logged_emissions = FALSE, fixed_effect = FALSE)
regression_results_7 <- regression_results_7%>%
mutate(emissions_fitted_values = exp(fitted_values+log_gdp+log_ffsh))%>%
mutate(absolute_error = abs(emissions_fitted_values - territorial_emissions))
summary(regression_results_7$absolute_error)
mea_regression_7 <- mean_absolute_error(regression_results_7)
mea_regression_7
#Regression 6
#Add an intercept on this one too
data_table_6 <- regression_emissions(data = regression_data, "log_territorial", c("log_gdp", "log_ffsh", "log_exports_gns_percent", "log_imports_gns_percent",
"log_exports_gns_percent.world", "log_imports_gns_percent.world"))
data_base <- data_table_6 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_6%>%
filter(year ==2020)
regression_results_6 <- prediction_regression(data = data_base, emissions = "log_territorial", explanatory_variables = c("log_gdp",
"log_ffsh", "log_exports_gns_percent", "log_imports_gns_percent", "log_exports_gns_percent.world",
"log_imports_gns_percent.world"), predicted_data = data_pred, logged_emissions = TRUE,
fixed_effect = TRUE)
summary(regression_results_6$absolute_error)
mea_regression_6 <- mean_absolute_error(regression_results_6)
mea_regression_6
data_table_5 <- regression_emissions(data = regression_data, "log_consumption", c("log_gdp", "log_ffsh", "log_exports_gns_percent", "log_imports_gns_percent",
"log_exports_gns_percent.world", "log_imports_gns_percent.world"))
data_base <- data_table_5 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_5%>%
filter(year ==2020)
regression_results_5 <- prediction_regression(data = data_base, emissions = "log_consumption", explanatory_variables = c("log_gdp",
"log_ffsh", "log_exports_gns_percent", "log_imports_gns_percent", "log_exports_gns_percent.world",
"log_imports_gns_percent.world"), predicted_data = data_pred, logged_emissions = TRUE)
summary(regression_results_5$absolute_error)
mea_regression_5 <- mean_absolute_error(regression_results_5)
mea_regression_5
#Regression 4
#I will need to add fossil_fuel_share.world when I have decided what to do with it
data_table_4 <- regression_emissions(data = regression_data, "log_consumption", c("log_gdp", "log_gdp.world", "fossil_fuel_share","fossil_fuel_share.world",
"industry_share", "industry_share.world", "trade_share", "trade_gns_percent.world"))
data_base <- data_table_4 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_4%>%
filter(year ==2020)
regression_results_4 <- prediction_regression(data = data_base, emissions = "log_consumption", explanatory_variables =c("log_gdp",
"log_gdp.world", "fossil_fuel_share", "industry_share", "industry_share.world",
"trade_gns_percent.world", "trade_share"),
predicted_data = data_pred, logged_emissions = TRUE)
summary(regression_results_4$absolute_error)
mea_regression_4 <- mean_absolute_error(regression_results_4)
mea_regression_4
#Regression 3 : Regressions from Liddle(2018)
#I will need to add fossil_fuel_share.world when I have decided what to do with it
data_table_3 <- regression_emissions(data = regression_data, "log_territorial", c("log_gdp", "log_gdp.world", "fossil_fuel_share","fossil_fuel_share.world",
"industry_share", "industry_share.world", "trade_share", "trade_gns_percent.world"))
data_base <- data_table_3 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_3%>%
filter(year ==2020)
regression_results_3 <- prediction_regression(data = data_base, emissions = "log_territorial", explanatory_variables =c("log_gdp",
"log_gdp.world", "fossil_fuel_share",
"industry_share", "industry_share.world",
"trade_share", "trade_gns_percent.world"),
predicted_data = data_pred, logged_emissions = TRUE)
summary(regression_results_3$absolute_error)
mea_regression_3 <- mean_absolute_error(regression_results_3)
mea_regression_3
#Regression 4
#I will need to add fossil_fuel_share.world when I have decided what to do with it
data_table_4 <- regression_emissions(data = regression_data, "log_consumption", c("log_gdp", "log_gdp.world", "fossil_fuel_share","fossil_fuel_share.world",
"industry_share", "industry_share.world", "trade_share", "trade_gns_percent.world"))
#Regression 2
data_table_2 <- regression_emissions(data = regression_data, "log_consumption",
c("log_emissions_pc.world", "log_territorial", "log_gdp", "log_gdp.world",
"log_imports_gns_percent", "log_imports_gns_percent.world", "log_exports_gns_percent",
"log_exports_gns_percent.world"))
data_base <- data_table_2 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_2%>%
filter(year ==2020)
regression_results_2 <- prediction_regression(data = data_base, emissions = "log_consumption",
explanatory_variables = c("log_emissions_pc.world", "log_territorial", "log_gdp", "log_gdp.world",
"log_imports_gns_percent", "log_imports_gns_percent.world", "log_exports_gns_percent",
"log_exports_gns_percent.world"),
predicted_data = data_pred, logged_emissions = TRUE)
summary(regression_results_2$absolute_error)
mea_regression_2 <- mean_absolute_error(regression_results_2)
mea_regression_2
#Regression 1 : territorial emissions ~ emissions.bar + ffsh + ffsh.bar + gdp + gdp.bar
data_table <- regression_emissions(data = regression_data, "territorial_emissions",  c("emissions_pc.world", "fossil_fuel_share", "gdp", "gdp.world", "fossil_fuel_share.world"))
data_base <- data_table %>%
filter(year <= 2012) #select ten years before the end year for prediction
data_pred <- data_table%>%
filter(year ==2022)
regression_results_1 <- prediction_regression(data = data_base, emissions = "territorial_emissions",
explanatory_variables = c("emissions_pc.world", "fossil_fuel_share", "gdp", "gdp.world"),
predicted_data = data_pred
)
summary(regression_results_1$absolute_error)
mea_regression_1 <- mean_absolute_error(regression_results_1)
mea_regression_1
regression_results_1 <- prediction_regression(data = data_base, emissions = "territorial_emissions",
explanatory_variables = c("emissions_pc.world", "fossil_fuel_share", "gdp", "gdp.world"),
predicted_data = data_pred, fixed_effect = TRUE
)
summary(regression_results_1$absolute_error)
mea_regression_1 <- mean_absolute_error(regression_results_1)
mea_regression_1
regression_results_1 <- prediction_regression(data = data_base, emissions = "territorial_emissions",
explanatory_variables = c("emissions_pc.world", "fossil_fuel_share", "gdp", "gdp.world"),
predicted_data = data_pred, fixed_effect = FALSE
)
summary(regression_results_1$absolute_error)
mea_regression_1 <- mean_absolute_error(regression_results_1)
mea_regression_1
regression_results_1 <- prediction_regression(data = data_base, emissions = "territorial_emissions",
explanatory_variables = c("emissions_pc.world", "fossil_fuel_share", "gdp", "gdp.world"),
predicted_data = data_pred, fixed_effect = TRUE
)
summary(regression_results_1$absolute_error)
mea_regression_1 <- mean_absolute_error(regression_results_1)
mea_regression_1
##############################
##Loading  and cleaning data##
##############################
getwd()
#Data about population per country
#Source : WDI (2025) https://databank.worldbank.org/source/wdi-database-archives
pop = read.csv("Population/5530a383-d6a3-4d54-8f7a-5ad1ab4a6ce6_Data.csv")
#Database of GDP, per capita, in ppp international 2021 USD
#Source : WDI (2025) https://databank.worldbank.org/source/wdi-database-archives
GDP = read.csv("GDP/676b275c-ac25-4861-96f2-f03722b33452_Data.csv")
#Balance of payments database, current prices USD
#Source : WDI (2025) https://databank.worldbank.org/source/wdi-database-archives
trade_balance_GnS = read.xlsx("Trade balances/f8effff1-90e9-46f0-8b5a-e74bd04abb53_Data.xlsx",
sheet = "Trade balances G&S (2015 USD)")
trade_balance_goods = read.xlsx("Trade balances/f8effff1-90e9-46f0-8b5a-e74bd04abb53_Data.xlsx",
sheet = "Trade balances goods (2015 USD)")
wdi_energy_data = read.csv("Energy data/WDI Data/d9749250-3e13-4307-aa21-4b3198e502a3_Data.csv")
fossil_fuel_share <- wdi_energy_data%>%
filter(Series.Code=="EG.USE.COMM.FO.ZS")
imports_exports = read.csv("Trade balances/Split exports-imports WDI/2d7238f1-ae7a-4040-aa1c-d879bd5512cb_Data.csv")
IVA = read.csv("Industry share/1a4983dd-00ca-48ef-864b-21eec0deb49b_Data.csv")
imports_GnS_percent <- imports_exports %>%
filter(Series.Code == "NE.IMP.GNFS.ZS")
exports_GnS_percent <- imports_exports %>%
filter(Series.Code == "NE.EXP.GNFS.ZS")
#The list of countries which are in the model
countries = read.csv("countries_table.csv")
#Upload data from Liddle (2018) database
#It is not used in practice but it could be useful for later
data_liddle = read.xlsx(xlsxFile = "Liddle (2018)/data consumption vs teritory.xlsx", startRow = 4)
data_liddle <- data_liddle[,-3]%>%
rename(country=X1)%>%
mutate(country = substr(country, 2, 4))%>%
filter(year==1990)%>%
select(country, oecd, low, lowmid, upmid, high)
countries_merge <- merge( x=countries, y=data_liddle, by="country", all.x = TRUE)
territorial_emissions_raw = read.csv("Emissions/emissions_co2_fossil_territorial_pc.csv")
consumption_emissions_raw = read.csv("Emissions/emissions_co2_fossil_consumption_based_pc.csv")
#Define a function to make the processing of WDI data faster
process_wdi_data <- function(data, extra_columns, name_variable, first_column){
for(i in first_column:length(data)){
names(data)[i] <- gsub(".*?(\\d{4}).*", "\\1", names(data)[i])
}
data_copy <- data
for (i in sort(extra_columns, decreasing=TRUE)){
data_copy <- data_copy[,-i]
}
data_clean <- data_copy%>%
pivot_longer(
cols = -Country.Code,          # Toutes les colonnes sauf "country"
names_to = "year",        # Les noms des colonnes deviennent la variable "year"
values_to = name_variable   # Les valeurs deviennent la variable "emissions"
) %>%
filter (Country.Code %in% countries$country)%>%
filter(year != 2024)%>%
rename(country=Country.Code)%>%
return(data_clean)
}
territorial_emissions <- territorial_emissions_raw %>%
slice(2:n()) %>%
set_names(c(territorial_emissions_raw[1, ]))
####################################################################################################
####################################################################################################
## This code is mostly used to clean raw data, and try out a few regressions                      ##
## But the regression method seems quite imprecise, so another regression is coded in another file##
####################################################################################################
####################################################################################################
getwd()
library(dplyr)
library(readr)
library(stats)
library(tidyr)
library(openxlsx)
library(rlang)
library(plm)
library(stats)
library(tidyverse)
regression_data <- read.csv("regression_data.csv")
