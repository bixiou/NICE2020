regression_results_19_5Y <- prediction_regression(data = data_base, emissions = "emissions_balance_percent", explanatory_variables = c("trade_balance_gns_percent", "balance_fuel_percent_gdp",
"log_gdp"),
predicted_data = data_pred_5Y, logged_emissions = FALSE, fixed_effect = TRUE)
regression_results_19 <- regression_results_19_5Y%>%
mutate(emissions_fitted_values = (fitted_values/100+1)*territorial_emissions)%>%
mutate(absolute_error = abs(emissions_fitted_values - consumption_emissions))
regression_results_19 <- mean_absolute_error_5Y(data = regression_results_19)%>%
filter (year==2020)
summary(regression_results_19$absolute_error_5Y)
data_base <- data_table_19 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_19%>%
filter(year ==2020)
data_pred_5Y <- data_table_19%>%
filter(year <=2020)%>%
filter(year >= 2016)
regression_results_20_5Y <- prediction_regression(data = data_base, emissions = "emissions_balance_percent", explanatory_variables = c("trade_balance_gns_percent",
"log_gdp"),
predicted_data = data_pred_5Y, logged_emissions = FALSE, fixed_effect = TRUE)
regression_results_20 <- regression_results_20_5Y%>%
mutate(emissions_fitted_values = (fitted_values/100+1)*territorial_emissions)%>%
mutate(absolute_error = abs(emissions_fitted_values - consumption_emissions))
regression_results_20 <- mean_absolute_error_5Y(data = regression_results_20)%>%
filter (year==2020)
summary(regression_results_20$absolute_error_5Y)
#Regression 21
data_table_21 <- regression_emissions(data = regression_data, "emissions_balance_percent", c("territorial_emissions", "consumption_emissions",
"balance_fuel_percent_gdp",
"trade_balance_gns_percent",
"log_gdp","log_ffsh", "fossil_fuel_share"),
last_year = 2020, countries_aside =90)
data_base <- data_table_21 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_21%>%
filter(year ==2020)
data_pred_5Y <- data_table_21%>%
filter(year <=2020)%>%
filter(year >= 2016)
regression_results_21_5Y <- prediction_regression(data = data_base, emissions = "emissions_balance_percent", explanatory_variables = c("trade_balance_gns_percent", "balance_fuel_percent_gdp",
"log_gdp", "fossil_fuel_share"),
predicted_data = data_pred_5Y, logged_emissions = FALSE, fixed_effect = TRUE)
regression_results_21 <- regression_results_21_5Y%>%
mutate(emissions_fitted_values = (fitted_values/100+1)*territorial_emissions)%>%
mutate(absolute_error = abs(emissions_fitted_values - consumption_emissions))
regression_results_21 <- mean_absolute_error_5Y(data = regression_results_21)%>%
filter (year==2020)
summary(regression_results_21$absolute_error_5Y)
absolute_error_table <- function(first_regression = 8, last_regression = 21){
table =countries
for (i in first_regression:last_regression){
reg_name <- paste0("regression_results_", i)
regression_table <- get(reg_name)
table <- merge(x = table, y = regression_table[, c("country", "absolute_error_5Y")], by = "country", all.x = TRUE) %>%
rename(!!paste0("regression_error_", i) := absolute_error_5Y)
}
return(table)
}
error_table <- absolute_error_table()
View(error_table)
absolute_error_table <- function(first_regression = 8, last_regression = 21){
table =countries
for (i in first_regression:last_regression){
reg_name <- paste0("regression_results_", i)
regression_table <- get(reg_name)
table <- merge(x = table, y = regression_table[, c("country", "absolute_error_5Y")], by = "country", all.x = TRUE) %>%
rename(!!paste0("regression_error_", i) := absolute_error_5Y)
}
table <- table%>%
select(-LABEL.EN, -LABEL.FR)
return(table)
}
error_table <- absolute_error_table()
error_table <- absolute_error_table()%>%
rowwise() %>%
mutate(
min_error = min(c_across(starts_with("regression_error_")), na.rm = TRUE),
best_regression = names(.)[which.min(c_across(starts_with("regression_error_")) + 0)]  # +0 trick to force numeric
) %>%
ungroup()
error_table <- absolute_error_table()%>%
rowwise() %>%
mutate(
min_error = min(c_across(starts_with("regression_error_")), na.rm = TRUE),
best_regression = names(.)[which.min(c_across(starts_with("regression_error_")))]
) %>%
ungroup()
error_table <- absolute_error_table()%>%
rowwise() %>%
mutate(
min_error = min(c_across(starts_with("regression_error_")), na.rm = TRUE)
) %>%
ungroup()
error_table[is.infinite(error_table)] <- NA
error_table[is.inf(error_table)] <- NA
is.infinite(error_table)
is.infinit(error_table[,"absolute_error_5Y"])
is.infinite(error_table[,"absolute_error_5Y"])
is.infinite(error_table[,"min_error"])
error_table <- absolute_error_table()%>%
rowwise() %>%
mutate(
min_error = min(c_across(starts_with("regression_error_")), na.rm = TRUE)
) %>%
ungroup()%>%
mutate(min_error = na_if(min_error, "Inf"))
error_table <- absolute_error_table()%>%
rowwise() %>%
mutate(
min_error = min(c_across(starts_with("regression_error_")), na.rm = TRUE)
) %>%
ungroup()%>%
mutate(min_error = na_if(min_error, Inf))
error_table <- absolute_error_table()%>%
rowwise() %>%
mutate(
min_error = min(c_across(starts_with("regression_error_")), na.rm = TRUE,
best_regression = names(.)[which.min(c_across(starts_with("regression_error_")))])
) %>%
ungroup()%>%
mutate(min_error = na_if(min_error, Inf))
error_table <- absolute_error_table()%>%
rowwise() %>%
mutate(min_error = min(c_across(starts_with("regression_error_")), na.rm = TRUE))%>%
mutate(min_error = na_if(min_error, Inf))%>%
mutate(best_regression = ifelse(is.na(min_error), NA, names(.)[which.min(c_across(starts_with("regression_error_")))])
) %>%
ungroup()
error_table <- absolute_error_table()%>%
rowwise() %>%
mutate(min_error = min(c_across(starts_with("regression_error_")), na.rm = TRUE))%>%
mutate(min_error = na_if(min_error, Inf))%>%
mutate(best_regression = ifelse(is.na(min_error), NA, names(.)[1+which.min(c_across(starts_with("regression_error_")))])
) %>%
ungroup()
error_table <- merge(x=error_table, y=regression_data[country, territorial_emissions_share], by="country")
error_table <- merge(x=error_table, y=regression_data["country", "territorial_emissions_share"], by="country")
error_table <- merge(x=error_table, y=regression_data["country", "territorial_emissions.share"], by="country")
error_table <- merge(x=error_table, y=regression_data["country", "territorial_emissions.share"], by=country)
error_table <- merge(x=error_table, y=regression_data[,c("country", "territorial_emissions.share")], by="country")
mean_min_error = mean_absolute_error(data = error_table, column = "min_error")
mean_min_error
summary(error_table$min_error)
specific_emissions_data <- regression_data%>%
select(country, territorial_emissions.share)%>%
filter(year == 2020)
error_table <- merge(x=error_table, y=specific_emissions_data, by="country")
specific_emissions_data <- regression_data%>%
select(country, territorial_emissions.share)%>%
filter(year == 2020)
error_table <- merge(x=error_table, y=specific_emissions_data, by="country")
specific_emissions_data <- regression_data%>%
select(country, territorial_emissions.share)%>%
filter(year == 2020)
specific_emissions_data <- regression_data%>%
filter(year == 2020)%>%
select(country, territorial_emissions.share)
error_table <- merge(x=error_table, y= specific_emissions_data, by="country")
mean_min_error = mean_absolute_error(data = error_table, column = "min_error")
mean_min_error
View(error_table)
error_table <- absolute_error_table()%>%
rowwise() %>%
mutate(min_error = min(c_across(starts_with("regression_error_")), na.rm = TRUE))%>%
mutate(min_error = na_if(min_error, Inf))%>%
mutate(best_regression = ifelse(is.na(min_error), NA, names(.)[1+which.min(c_across(starts_with("regression_error_")))])
) %>%
ungroup()
specific_emissions_data <- regression_data%>%
filter(year == 2020)%>%
select(country, territorial_emissions.share)
error_table <- merge(x=error_table, y= specific_emissions_data, by="country")
View(error_table)
mean_min_error = mean_absolute_error(data = error_table, column = "min_error")
mean_min_error
summary(error_table$min_error)
regression_data_7 <- regression_data%>%
mutate(difference_variable = log_territorial - log_ffsh - log_gdp)
data_table_7 <- regression_emissions(data = regression_data_7, "difference_variable", c("log_gdp", "log_ffsh", "log_exports_gns_percent", "log_imports_gns_percent",
"log_exports_gns_percent.world", "log_imports_gns_percent.world", "log_gdp.world", "log_industry_share",
"log_industry_share.world", "log_emissions_pc.world", "log_territorial", "territorial_emissions"))
data_base <- data_table_7 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_7%>%
filter(year ==2020)
data_pred_5Y <- data_table_7%>%
filter(year >= 2016)%>%
filter(year<=2020)
regression_results_7 <- prediction_regression(data = data_base, emissions = "difference_variable", explanatory_variables = c("log_exports_gns_percent", "log_imports_gns_percent",
"log_exports_gns_percent.world", "log_imports_gns_percent.world", "log_gdp.world", "log_industry_share",
"log_industry_share.world", "log_emissions_pc.world"),
predicted_data = data_pred, logged_emissions = FALSE, fixed_effect = FALSE)
regression_results_7 <- regression_results_7%>%
mutate(emissions_fitted_values = exp(fitted_values+log_gdp+log_ffsh))%>%
mutate(absolute_error = abs(emissions_fitted_values - territorial_emissions))
summary(regression_results_7$absolute_error)
mea_regression_7 <- mean_absolute_error(regression_results_7)
mea_regression_7
regression_results_7_5Y <- prediction_regression(data = data_base, emissions = "difference_variable", explanatory_variables = c("log_exports_gns_percent", "log_imports_gns_percent",
"log_exports_gns_percent.world", "log_imports_gns_percent.world", "log_gdp.world", "log_industry_share",
"log_industry_share.world", "log_emissions_pc.world"),
predicted_data = data_pred_5Y, logged_emissions = FALSE, fixed_effect = FALSE)
regression_results_7 <- prediction_regression(data = data_base, emissions = "difference_variable", explanatory_variables = c("log_exports_gns_percent", "log_imports_gns_percent",
"log_exports_gns_percent.world", "log_imports_gns_percent.world", "log_gdp.world", "log_industry_share",
"log_industry_share.world", "log_emissions_pc.world"),
predicted_data = data_pred, logged_emissions = FALSE, fixed_effect = FALSE)
regression_results_7 <- regression_results_7%>%
mutate(emissions_fitted_values = exp(fitted_values+log_gdp+log_ffsh))%>%
mutate(absolute_error = abs(emissions_fitted_values - territorial_emissions))
summary(regression_results_7$absolute_error)
mea_regression_7 <- mean_absolute_error(regression_results_7)
mea_regression_7
regression_results_7_5Y <- prediction_regression(data = data_base, emissions = "difference_variable", explanatory_variables = c("log_exports_gns_percent", "log_imports_gns_percent",
"log_exports_gns_percent.world", "log_imports_gns_percent.world", "log_gdp.world", "log_industry_share",
"log_industry_share.world", "log_emissions_pc.world"),
predicted_data = data_pred_5Y, logged_emissions = FALSE, fixed_effect = FALSE)
regression_results_7 <- regression_results_7_5Y%>%
mutate(emissions_fitted_values = exp(fitted_values+log_gdp+log_ffsh))%>%
mutate(absolute_error = abs(emissions_fitted_values - territorial_emissions))
summary(regression_results_7$absolute_error)
regression_results_7 <- mean_absolute_error_5Y(data = regression_results_7)%>%
filter (year==2020)
summary(regression_results_7$absolute_error_5Y)
mea_regression_7 <- mean_absolute_error(regression_results_7, column = "absolute_error_5Y")
mea_regression_7
regression_results_7_5Y <- prediction_regression(data = data_base, emissions = "difference_variable", explanatory_variables = c("log_exports_gns_percent", "log_imports_gns_percent",
"log_exports_gns_percent.world", "log_imports_gns_percent.world", "log_gdp.world", "log_industry_share",
"log_industry_share.world", "log_emissions_pc.world"),
predicted_data = data_pred_5Y, logged_emissions = FALSE, fixed_effect = FALSE)
regression_results_7 <- regression_results_7_5Y%>%
mutate(emissions_fitted_values = exp(fitted_values+log_gdp+log_ffsh))%>%
mutate(absolute_error = abs(emissions_fitted_values - territorial_emissions))
regression_results_7 <- mean_absolute_error_5Y(data = regression_results_7)%>%
filter (year==2020)
summary(regression_results_7$absolute_error_5Y)
mea_regression_7 <- mean_absolute_error(regression_results_7, column = "absolute_error_5Y")
mea_regression_7
data_pred_5Y <- data_table_6%>%
filter(year<=2020)%>%
filter(year>=2016)
#Regression 6
data_table_6 <- regression_emissions(data = regression_data, "log_territorial", c("log_gdp", "log_ffsh", "log_exports_gns_percent", "log_imports_gns_percent",
"log_exports_gns_percent.world", "log_imports_gns_percent.world"))
data_base <- data_table_6 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_6%>%
filter(year ==2020)
data_pred_5Y <- data_table_6%>%
filter(year<=2020)%>%
filter(year>=2016)
regression_results_6 <- prediction_regression(data = data_base, emissions = "log_territorial", explanatory_variables = c("log_gdp",
"log_ffsh", "log_exports_gns_percent", "log_imports_gns_percent", "log_exports_gns_percent.world",
"log_imports_gns_percent.world"), predicted_data = data_pred, logged_emissions = TRUE,
fixed_effect = TRUE)
summary(regression_results_6$absolute_error)
mea_regression_6 <- mean_absolute_error(regression_results_6)
mea_regression_6
regression_results_6_5Y <- prediction_regression(data = data_base, emissions = "log_territorial", explanatory_variables = c("log_gdp",
"log_ffsh", "log_exports_gns_percent", "log_imports_gns_percent", "log_exports_gns_percent.world",
"log_imports_gns_percent.world"),
predicted_data = data_pred_5Y , logged_emissions = TRUE,
fixed_effect = TRUE)
regression_results_6 <- prediction_regression(data = data_base, emissions = "log_territorial", explanatory_variables = c("log_gdp",
"log_ffsh", "log_exports_gns_percent", "log_imports_gns_percent", "log_exports_gns_percent.world",
"log_imports_gns_percent.world"), predicted_data = data_pred, logged_emissions = TRUE,
fixed_effect = TRUE)
regression_results_6_5Y <- prediction_regression(data = data_base, emissions = "log_territorial", explanatory_variables = c("log_gdp",
"log_ffsh", "log_exports_gns_percent", "log_imports_gns_percent", "log_exports_gns_percent.world",
"log_imports_gns_percent.world"),
predicted_data = data_pred_5Y , logged_emissions = TRUE,
fixed_effect = TRUE)
regression_results_6 <- mean_absolute_error_5Y(data = regression_results_6_5Y)%>%
filter (year==2020)
summary(regression_results_6$absolute_error_5Y)
mea_regression_6 <- mean_absolute_error(regression_results_6, column = "absolute_error_5Y")
mea_regression_6
regression_results_6_5Y <- prediction_regression(data = data_base, emissions = "log_territorial", explanatory_variables = c("log_gdp",
"log_ffsh", "log_exports_gns_percent", "log_imports_gns_percent", "log_exports_gns_percent.world",
"log_imports_gns_percent.world"),
predicted_data = data_pred_5Y , logged_emissions = TRUE,
fixed_effect = TRUE)
regression_results_6 <- mean_absolute_error_5Y(data = regression_results_6_5Y)%>%
filter (year==2020)
summary(regression_results_6$absolute_error_5Y)
mea_regression_6 <- mean_absolute_error(regression_results_6, column = "absolute_error_5Y")
mea_regression_6
regression_results_5_5Y <- prediction_regression(data = data_base, emissions = "log_consumption", explanatory_variables = c("log_gdp",
"log_ffsh", "log_exports_gns_percent", "log_imports_gns_percent", "log_exports_gns_percent.world",
"log_imports_gns_percent.world"),
predicted_data = data_pred_5Y, logged_emissions = TRUE, fixed_effect = TRUE)
data_table_5 <- regression_emissions(data = regression_data, "log_consumption", c("log_gdp", "log_ffsh", "log_exports_gns_percent", "log_imports_gns_percent",
"log_exports_gns_percent.world", "log_imports_gns_percent.world"))
data_base <- data_table_5 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_5%>%
filter(year ==2020)
data_pred_5Y <- data_table_5%>%
filter(year <= 2020)%>%
filter(year >=2016)
regression_results_5 <- prediction_regression(data = data_base, emissions = "log_consumption", explanatory_variables = c("log_gdp",
"log_ffsh", "log_exports_gns_percent", "log_imports_gns_percent", "log_exports_gns_percent.world",
"log_imports_gns_percent.world"), predicted_data = data_pred, logged_emissions = TRUE, fixed_effect = TRUE)
summary(regression_results_5$absolute_error)
mea_regression_5 <- mean_absolute_error(regression_results_5)
mea_regression_5
regression_results_5_5Y <- prediction_regression(data = data_base, emissions = "log_consumption", explanatory_variables = c("log_gdp",
"log_ffsh", "log_exports_gns_percent", "log_imports_gns_percent", "log_exports_gns_percent.world",
"log_imports_gns_percent.world"),
predicted_data = data_pred_5Y, logged_emissions = TRUE, fixed_effect = TRUE)
regression_results_5 <- mean_absolute_error_5Y(data = regression_results_5_5Y)%>%
filter (year==2020)
summary(regression_results_5$absolute_error_5Y)
mea_regression_5 <- mean_absolute_error(regression_results_5, column = "absolute_error_5Y")
mea_regression_5
regression_results_4_5Y <- prediction_regression(data = data_base, emissions = "log_consumption", explanatory_variables =c("log_gdp",
"log_gdp.world", "fossil_fuel_share", "industry_share", "industry_share.world",
"trade_gns_percent.world", "trade_share"),
predicted_data = data_pred_5Y, logged_emissions = TRUE)
#Regression 4
#I will need to add fossil_fuel_share.world when I have decided what to do with it
data_table_4 <- regression_emissions(data = regression_data, "log_consumption", c("log_gdp", "log_gdp.world", "fossil_fuel_share","fossil_fuel_share.world",
"industry_share", "industry_share.world", "trade_share", "trade_gns_percent.world"))
data_base <- data_table_4 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_4%>%
filter(year ==2020)
data_pred_5Y <- data_table_4%>%
filter(year <= 2020)%>%
filter(year >= 2016)
regression_results_4 <- prediction_regression(data = data_base, emissions = "log_consumption", explanatory_variables =c("log_gdp",
"log_gdp.world", "fossil_fuel_share", "industry_share", "industry_share.world",
"trade_gns_percent.world", "trade_share"),
predicted_data = data_pred, logged_emissions = TRUE)
summary(regression_results_4$absolute_error)
mea_regression_4 <- mean_absolute_error(regression_results_4)
mea_regression_4
regression_results_4_5Y <- prediction_regression(data = data_base, emissions = "log_consumption", explanatory_variables =c("log_gdp",
"log_gdp.world", "fossil_fuel_share", "industry_share", "industry_share.world",
"trade_gns_percent.world", "trade_share"),
predicted_data = data_pred_5Y, logged_emissions = TRUE)
regression_results_4 <- mean_absolute_error_5Y(data = regression_results_4_5Y)%>%
filter (year==2020)
summary(regression_results_4$absolute_error_5Y)
mea_regression_4 <- mean_absolute_error(regression_results_4, column = "absolute_error_5Y")
mea_regression_4
#Regression 3 : Regressions from Liddle(2018)
#I will need to add fossil_fuel_share.world when I have the info
data_table_3 <- regression_emissions(data = regression_data, "log_territorial", c("log_gdp", "log_gdp.world", "fossil_fuel_share","fossil_fuel_share.world",
"industry_share", "industry_share.world", "trade_share", "trade_gns_percent.world"))
data_base <- data_table_3 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_3%>%
filter(year ==2020)
data_pred_5Y <- data_table_3%>%
filter(year <= 2020)%>%
filter(year >= 2016)
regression_results_3 <- prediction_regression(data = data_base, emissions = "log_territorial", explanatory_variables =c("log_gdp",
"log_gdp.world", "fossil_fuel_share",
"industry_share", "industry_share.world",
"trade_share", "trade_gns_percent.world"),
predicted_data = data_pred, logged_emissions = TRUE)
summary(regression_results_3$absolute_error)
mea_regression_3 <- mean_absolute_error(regression_results_3)
mea_regression_3
regression_results_3 <- prediction_regression(data = data_base, emissions = "log_territorial", explanatory_variables =c("log_gdp",
"log_gdp.world", "fossil_fuel_share",
"industry_share", "industry_share.world",
"trade_share", "trade_gns_percent.world"),
predicted_data = data_pred, logged_emissions = TRUE)
regression_results_3_5Y <- prediction_regression(data = data_base, emissions = "log_territorial", explanatory_variables =c("log_gdp",
"log_gdp.world", "fossil_fuel_share",
"industry_share", "industry_share.world",
"trade_share", "trade_gns_percent.world"),
predicted_data = data_pred_5Y, logged_emissions = TRUE)
regression_results_3 <- mean_absolute_error_5Y(data = regression_results_3_5Y)%>%
filter (year==2020)
summary(regression_results_3$absolute_error_3Y)
summary(regression_results_3$absolute_error_5Y)
mea_regression_3 <- mean_absolute_error(regression_results_3, column = "absolute_error_5Y")
mea_regression_3
regression_results_3_5Y <- prediction_regression(data = data_base, emissions = "log_territorial", explanatory_variables =c("log_gdp",
"log_gdp.world", "fossil_fuel_share",
"industry_share", "industry_share.world",
"trade_share", "trade_gns_percent.world"),
predicted_data = data_pred_5Y, logged_emissions = TRUE)
regression_results_3 <- mean_absolute_error_5Y(data = regression_results_3_5Y)%>%
filter (year==2020)
summary(regression_results_3$absolute_error_5Y)
mea_regression_3 <- mean_absolute_error(regression_results_3, column = "absolute_error_5Y")
mea_regression_3
regression_results_2 <- prediction_regression(data = data_base, emissions = "log_consumption",
explanatory_variables = c("log_emissions_pc.world", "log_territorial", "log_gdp", "log_gdp.world",
"log_imports_gns_percent", "log_imports_gns_percent.world", "log_exports_gns_percent",
"log_exports_gns_percent.world"),
predicted_data = data_pred_5Y, logged_emissions = TRUE)
#Regression 2
data_table_2 <- regression_emissions(data = regression_data, "log_consumption",
c("log_emissions_pc.world", "log_territorial", "log_gdp", "log_gdp.world",
"log_imports_gns_percent", "log_imports_gns_percent.world", "log_exports_gns_percent",
"log_exports_gns_percent.world"))
data_base <- data_table_2 %>%
filter(year <= 2010) #select ten years before the end year for prediction
data_pred <- data_table_2%>%
filter(year ==2020)
data_pred_5Y <- data_table_2%>%
filter(year <= 2020)%>%
filter(year >= 2016)
regression_results_2 <- prediction_regression(data = data_base, emissions = "log_consumption",
explanatory_variables = c("log_emissions_pc.world", "log_territorial", "log_gdp", "log_gdp.world",
"log_imports_gns_percent", "log_imports_gns_percent.world", "log_exports_gns_percent",
"log_exports_gns_percent.world"),
predicted_data = data_pred, logged_emissions = TRUE)
summary(regression_results_2$absolute_error)
regression_results_2 <- prediction_regression(data = data_base, emissions = "log_consumption",
explanatory_variables = c("log_emissions_pc.world", "log_territorial", "log_gdp", "log_gdp.world",
"log_imports_gns_percent", "log_imports_gns_percent.world", "log_exports_gns_percent",
"log_exports_gns_percent.world"),
predicted_data = data_pred, logged_emissions = TRUE)
summary(regression_results_2$absolute_error)
mea_regression_2 <- mean_absolute_error(regression_results_2)
mea_regression_2
regression_results_2 <- prediction_regression(data = data_base, emissions = "log_consumption",
explanatory_variables = c("log_emissions_pc.world", "log_territorial", "log_gdp", "log_gdp.world",
"log_imports_gns_percent", "log_imports_gns_percent.world", "log_exports_gns_percent",
"log_exports_gns_percent.world"),
predicted_data = data_pred_5Y, logged_emissions = TRUE)
regression_results_2 <- mean_absolute_error_5Y(data = regression_results_2_5Y)%>%
filter (year==2020)
regression_results_2_5Y <- prediction_regression(data = data_base, emissions = "log_consumption",
explanatory_variables = c("log_emissions_pc.world", "log_territorial", "log_gdp", "log_gdp.world",
"log_imports_gns_percent", "log_imports_gns_percent.world", "log_exports_gns_percent",
"log_exports_gns_percent.world"),
predicted_data = data_pred_5Y, logged_emissions = TRUE)
regression_results_2 <- mean_absolute_error_5Y(data = regression_results_2_5Y)%>%
filter (year==2020)
summary(regression_results_2$absolute_error_5Y)
mea_regression_2 <- mean_absolute_error(regression_results_2, column = "absolute_error_5Y")
mea_regression_2
#Regression 1 : territorial emissions ~ emissions.bar + ffsh + ffsh.bar + gdp + gdp.bar
data_table <- regression_emissions(data = regression_data, "territorial_emissions",  c("emissions_pc.world", "fossil_fuel_share", "gdp", "gdp.world", "fossil_fuel_share.world"))
data_base <- data_table %>%
filter(year <= 2012) #select ten years before the end year for prediction
data_pred <- data_table%>%
filter(year ==2022)
regression_results_1 <- prediction_regression(data = data_base, emissions = "territorial_emissions",
explanatory_variables = c("emissions_pc.world", "fossil_fuel_share", "gdp", "gdp.world"),
predicted_data = data_pred, fixed_effect = TRUE
)
summary(regression_results_1$absolute_error)
mea_regression_1 <- mean_absolute_error(regression_results_1)
mea_regression_1
regression_results_1_5Y <- prediction_regression(data = data_base, emissions = "territorial_emissions",
explanatory_variables = c("emissions_pc.world", "fossil_fuel_share", "gdp", "gdp.world"),
predicted_data = data_pred, fixed_effect = TRUE
)
regression_results_1 <- mean_absolute_error_5Y(data = regression_results_1_5Y)%>%
filter (year==2020)
summary(regression_results_1$absolute_error_5Y)
regression_results_1_5Y <- prediction_regression(data = data_base, emissions = "territorial_emissions",
explanatory_variables = c("emissions_pc.world", "fossil_fuel_share", "gdp", "gdp.world"),
predicted_data = data_pred, fixed_effect = TRUE
)
regression_results_1 <- mean_absolute_error_5Y(data = regression_results_1_5Y)%>%
filter (year==2020)
summary(regression_results_1$absolute_error_5Y)
regression_results_1_5Y <- prediction_regression(data = data_base, emissions = "territorial_emissions",
explanatory_variables = c("emissions_pc.world", "fossil_fuel_share", "gdp", "gdp.world"),
predicted_data = data_pred_5Y, fixed_effect = TRUE
)
#Regression 1 : territorial emissions ~ emissions.bar + ffsh + ffsh.bar + gdp + gdp.bar
data_table <- regression_emissions(data = regression_data, "territorial_emissions",  c("emissions_pc.world", "fossil_fuel_share", "gdp", "gdp.world", "fossil_fuel_share.world"))
data_base <- data_table %>%
filter(year <= 2012) #select ten years before the end year for prediction
data_pred <- data_table%>%
filter(year ==2022)
regression_results_1 <- prediction_regression(data = data_base, emissions = "territorial_emissions",
explanatory_variables = c("emissions_pc.world", "fossil_fuel_share", "gdp", "gdp.world"),
predicted_data = data_pred, fixed_effect = TRUE
)
summary(regression_results_1$absolute_error)
mea_regression_1 <- mean_absolute_error(regression_results_1)
mea_regression_1
regression_results_1_5Y <- prediction_regression(data = data_base, emissions = "territorial_emissions",
explanatory_variables = c("emissions_pc.world", "fossil_fuel_share", "gdp", "gdp.world"),
predicted_data = data_pred_5Y, fixed_effect = TRUE
)
#Regression 1 : territorial emissions ~ emissions.bar + ffsh + ffsh.bar + gdp + gdp.bar
data_table <- regression_emissions(data = regression_data, "territorial_emissions",  c("emissions_pc.world", "fossil_fuel_share", "gdp", "gdp.world", "fossil_fuel_share.world"))
data_base <- data_table %>%
filter(year <= 2012) #select ten years before the end year for prediction
data_pred <- data_table%>%
filter(year ==2022)
data_pred_5Y <- data_table%>%
filter(year <=2022)%>%
filter(year >= 2018)
regression_results_1 <- prediction_regression(data = data_base, emissions = "territorial_emissions",
explanatory_variables = c("emissions_pc.world", "fossil_fuel_share", "gdp", "gdp.world"),
predicted_data = data_pred, fixed_effect = TRUE
)
summary(regression_results_1$absolute_error)
mea_regression_1 <- mean_absolute_error(regression_results_1)
mea_regression_1
regression_results_1_5Y <- prediction_regression(data = data_base, emissions = "territorial_emissions",
explanatory_variables = c("emissions_pc.world", "fossil_fuel_share", "gdp", "gdp.world"),
predicted_data = data_pred_5Y, fixed_effect = TRUE
)
regression_results_1 <- mean_absolute_error_5Y(data = regression_results_1_5Y)%>%
filter (year==2020)
summary(regression_results_1$absolute_error_5Y)
mea_regression_1 <- mean_absolute_error(regression_results_1, column = "absolute_error_5Y")
mea_regression_1
summary(error_table$min_error)
write.xlsx(error_table, "error_table.xlsx")
